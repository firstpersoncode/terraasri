import { ICase } from "./types";


export const cases: ICase[] = [
  {
    title: "Case 1",
    subTitle: "Unearthing the Philosopher's Stone",
    description:
      "As a resourceful alchemist on a mystical quest, you seek the legendary Philosopher's Stone, rumored to be hidden on a remote island shaped like a 3x3 spiral. Each section of the island holds a numbered ingredient, with higher numbers closer to the island's heart. You believe the Stone's key lies in unlocking the secret sum of the spiral's diagonal numbers.",
    slug: "unearthing-the-philosopher-stone",
  },
  {
    title: "Case 2",
    subTitle: "The Time Wizard's Gambit",
    description:
      "As the esteemed Time Wizard, your expertise in temporal manipulation is renowned throughout the realm. Three diplomats – Ambassador Chronos, Envoy Kairos, and Delegate Hora – require your assistance in coordinating their busy schedules. Each diplomat juggles numerous meetings, and they need to find a common time slot to discuss a pressing matter of intertemporal diplomacy.",
    slug: "the-time-wizard-gambit",
  },
  {
    title: "Case 3",
    subTitle: "The Never ending Palindrome Quest",
    description:
      "You're a renowned wordsmith, renowned for your mastery of language and its hidden patterns. Today, you embark on a new challenge: deciphering the enigmatic concept of circular palindromes. These unique word forms read the same forward and backward, but with a twist – the string loops around when reaching the end! Can you craft a function that discerns whether a given string qualifies as this fascinating linguistic phenomenon?",
    slug: "the-never-ending-palindrome-quest",
  },
  {
    title: "Case 4",
    subTitle: "Unveiling the Secrets of Self-Numbers",
    description:
      "In 1949, D.R. Kaprekar, a renowned Indian mathematician, stumbled upon a fascinating group of numbers known as 'self-numbers.' These elusive entities hold a peculiar property – they cannot be generated by adding the number itself and the sum of its digits. Your mission, codebreaker, is to embark on a journey to discover these self-numbers and calculate their sum, venturing beyond the realm of 100 and into the vast landscape of numbers up to 5000.",
    slug: "unveiling-the-secrets-of-self-numbers",
  },
  {
    title: "Case 5",
    subTitle: "Decrypting the Emoji Code",
    description:
      "You're a secret agent tasked with decoding cryptic messages hidden within seemingly innocent text messages and documents. The catch? These messages are encrypted using a unique language—Emoji Code! Your mission: crack the code and reveal the hidden messages, ensuring vital information reaches HQ.",
    slug: "decrypting-the-emoji-code",
  },
];

export const emojiArray = [
  "😀", "😃", "😄", "😁", "😆", "😅", "😂", "🤣", "😊", "😍",
  "😎", "😜", "😇", "🥰", "😌", "😢", "😭", "😡", "😠", "🤔",
  "😬", "😳", "😩", "😤", "😪", "😷", "🤒", "🤕", "🤢", "🤮",
  "🤯", "😱", "😨", "😰", "😥", "😓", "🤗", "🤓", "🧐", "😈",
  "👿", "👹", "👺", "💀", "👻", "👽", "🤖", "💩", "😺", "😸",
  "😻", "😼", "😽", "🙀", "😿", "😹", "😾", "👐", "🙌", "👏",
  "🙏", "🤝", "👍", "👎", "👊", "✊", "🤛", "🤜", "🤞", "✌️",
  "🤘", "👌", "👈", "👉", "👆", "👇", "✋", "🤚", "🖐", "🖖",
  "👋", "🤙", "💪", "🖕", "✍️", "🤳", "💅", "💍", "💄", "💋",
  "👄", "👅", "👂", "👃", "👁️", "👀", "🧠", "👤", "👥", "🗣️",
  "👶", "👧", "🧒", "👦", "👩", "🧑", "👨", "👱", "👴", "👵",
  "👲", "👳", "👮", "👷", "💂", "🕵️", "👩‍⚕️", "👨‍⚕️", "👩‍🌾", "👨‍🌾",
  "👩‍🍳", "👨‍🍳", "👩‍🎓", "👨‍🎓", "👩‍🎤", "👨‍🎤", "👩‍🏫", "👨‍🏫", "👩‍🏭", "👨‍🏭",
  "👩‍💻", "👨‍💻", "👩‍💼", "👨‍💼", "👩‍🔧", "👨‍🔧", "👩‍🔬", "👨‍🔬", "👩‍🎨", "👨‍🎨",
  "👩‍🚒", "👨‍🚒", "👩‍✈️", "👨‍✈️", "👩‍🚀", "👨‍🚀", "👩‍⚖️", "👨‍⚖️", "👰", "🤵",
  "👸", "🤴", "🤶", "🎅", "🧙‍♀️", "🧙‍♂️", "🧝‍♀️", "🧝‍♂️", "🧚‍♀️", "🧚‍♂️",
  "🧞‍♀️", "🧞‍♂️", "🧜‍♀️", "🧜‍♂️", "💆", "💇", "🚶", "🏃", "💃", "🕺",
  "👯", "🧖‍♀️", "🧖‍♂️", "👼", "🎃", "👻", "🎅", "🤶", "❤️", "💔",
  "💋", "💌", "💘", "💖", "💗", "💓", "💕", "💞", "💫", "💥",
  "💦", "🐶", "🐱", "🐭", "🐹", "🐰", "🦊", "🐻", "🐼", "🐨",
  "🐯", "🦁", "🐮", "🐷", "🐽", "🐸", "🐵", "🐒", "🐔", "🐧",
  "🐦", "🐤", "🐣", "🐥", "🦆", "🦢", "🦉", "🦚", "🦜", "🐊",
  "🐢", "🦕", "🦖", "🐍", "🐲", "🐉", "🐾", "🦔", "🦓", "🦍",
  "🐪", "🐫", "🦙", "🦒", "🐘", "🦏", "🦛", "🐃", "🐄", "🐎",
  "🐖", "🐏", "🐑", "🐐", "🐓", "🦃", "🦚", "🦜", "🦔", "🦩",
  "🐇", "🦝", "🦨", "🦡", "🦫", "🦦", "🦥", "🐿️", "🐩", "🐕",
  "🦮", "🐕‍🦺", "🐾", "🐉", "🐲", "🌵", "🎄", "🌲", "🌳", "🌴",
  "🌱", "🌿", "☘️", "🍀", "🎍", "🎋", "🍃", "🍂", "🍁", "🌾",
  "🌺", "🌻", "🌹", "🥀", "🌷", "🌼", "🌸", "💐", "🍄", "🍅",
  "🍆", "🥒", "🥔", "🍠", "🌰", "🍎", "🍏", "🍐", "🍑", "🍒",
  "🍓", "🥝", "🍍", "🥭", "🍊", "🍋", "🍈", "🍇", "🍉", "🍊",
  "🍋", "🍌", "🍍", "🍎", "🍏", "🍐", "🍑", "🍒", "🍓", "🥝",
];